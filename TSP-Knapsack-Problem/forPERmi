#metto il mino ciclo for per aggiungere il valore di mi in funzione dei valori delle y.
#Secondo me potrebbe avere un mini senso, se hai da modificare e hai idee , scrivi!!!

cities = [0.6606,0.9695,0.5906,0.2124,0.0398,0.1367,0.9536,0.6091,0.8767,...
    0.8148,0.3876,0.7041,0.0213,0.3429,0.7471,0.5449,0.9464,0.1247,0.1636,...
    0.8668,;0.9500,0.6740,0.5029,0.8274,0.9697,0.5979,0.2184,0.7148,0.2395,...
    0.2867,0.8200,0.3296,0.1649,0.3025,0.8192,0.9392,0.8191,0.4351,0.8646,...
    0.6768];

[r c]=size(cities);

Cities=zeros(3,c);
Cities(1:2,:)=cities;

 for i=1:c
     if Cities(2,i)>0.5
         Cities(3,i)=1;
     else
         Cities(3,i)=-1;
     end
 end
 #e se fosse
 for i=1:2
 
 
 
 #ERRATA CORRIGE
 
 [r c]=size(cities);

Cities=zeros(3,c);
Cities(1:2,:)=cities;
[vm im]=max(cities(1,:));

 for i=1:c
     if Cities(1,i)>(vm/2)
         Cities(3,i)=1;
     else
         Cities(3,i)=-1;
     end
 end
 
 #ho apportato alcune modifiche.
 #La matrice che si vede  è una 2x20, la prima riga la conisdero come se fosse la x e la seconda la y.
 #Quindi mi baso sulla prima riga per determinare la poszione del fiume, per essere precisi come il valore max diviso per due.
 

#Altro errorino: per renderlo più generale possibile

"Cities=zeros(r+1,c);"




